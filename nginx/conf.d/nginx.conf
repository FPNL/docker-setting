# 下面是fastcgi_params解釋：
# fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;#腳本文件請求的路徑,也就是說當訪問127.0.0.1/index.php的時候，需要讀取網站根目錄下面的index.php文件，如果沒有配置這一配置項時，nginx不回去網站根目錄下訪問.php文件，所以返回空白
# fastcgi_param QUERY_STRING $query_string; #請求的參數;如?app=123
# fastcgi_param REQUEST_METHOD $request_method; #請求的動作(GET,POST)
# fastcgi_param CONTENT_TYPE $content_type; #請求頭中的Content-Type字段
# fastcgi_param CONTENT_LENGTH $content_length; #請求頭中的Content-length字段。

# fastcgi_param SCRIPT_NAME $fastcgi_script_name; #腳本名稱
# fastcgi_param REQUEST_URI $request_uri; #請求的地址不帶參數
# fastcgi_param DOCUMENT_URI $document_uri; #與$uri相同。
# fastcgi_param DOCUMENT_ROOT $document_root; #網站的根目錄。在server配置中root指令中指定的值
# fastcgi_param SERVER_PROTOCOL $server_protocol; #請求使用的協議，通常是HTTP/1.0或HTTP/1.1。

# fastcgi_param GATEWAY_INTERFACE CGI/1.1; #cgi 版本
# fastcgi_param SERVER_SOFTWARE nginx/$nginx_version; #nginx 版本號，可修改、隱藏

# fastcgi_param REMOTE_ADDR $remote_addr; #客戶端IP
# fastcgi_param REMOTE_PORT $remote_port; #客戶端端口
# fastcgi_param SERVER_ADDR $server_addr; #服務器IP地址
# fastcgi_param SERVER_PORT $server_port; #服務器端口
# fastcgi_param SERVER_NAME $server_name; #服務器名，域名在server配置中指定的server_name

# fastcgi_param PATH_INFO $path_info; #可自定義變量

# NGINX x Symfony 可參考：
# https://symfony.com/doc/current/setup/web_server_configuration.html#nginx
server {
    listen 80;
    server_name localhost;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;


    root /usr/src/myapp/public; # 指向的php容器的根目錄

    location / {
        # try to serve file directly, fallback to index.php
        # 相等 apache rewrite
        # 其作用是按順序檢查文件是否存在，返回第一個找到的文件或文件夾(結尾加斜線表示為文件夾)，如果所有的文件或文件夾都找不到，會進行一個內部重定向到最後一個參數。
        # https://www.hi-linux.com/posts/53878.html
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_pass docker-php-project-a:9000; #php-workspace是模板文件中的php-fpm服务名

        # 此種方式依賴 nginx 的 fastcgi_split_path_info 指令, 該指令通過正則表達式來對 uri 進行處理, 從中分理出真實腳本文件和 PATH_INFO, 並根據正則捕獲組來設置兩個重要變量
        # 1. $fastcgi_script_name
        # 2. $fastcgi_path_info
        fastcgi_split_path_info ^(.+\.php)(.*)$;

        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        # http://nginx.org/en/docs/http/ngx_http_core_module.html#internal
        internal;
    }
    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }
}

server {
    listen 81;
    server_name localhost;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /usr/src/myapp;

    # location /views {
    #     root /usr/src/app/views/dist;
    #     try_files $uri;
    # }

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass docker-php-project-b:9000;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        internal;
    }

    location ~ \.php$ {
        return 404;
    }
}
